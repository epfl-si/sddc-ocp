# The equivalent of installing an apt package in the days of yore.
#
# Translated into Ansiblese from
# https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.8/html/install/installing#installing-from-the-cli

- tags: always
  include_vars: "{{ item }}"
  with_items:
    - xaasible-vars.yml
    - versions.yml
    - hub-vars.yml

- name: "namespace/{{ rhacm_operator_namespace }}"
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ rhacm_operator_namespace }}"

- name: OperatorGroup/rhacm
  kubernetes.core.k8s:
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: rhacm
        namespace: "{{ rhacm_operator_namespace }}"
      spec:
        targetNamespaces:
        - "{{ rhacm_operator_namespace }}"

- name: Subscription/acm-operator
  kubernetes.core.k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: acm-operator
        namespace: "{{ rhacm_operator_namespace }}"
      spec:
        sourceNamespace: openshift-marketplace
        source: redhat-operators
        channel: "{{ rhacm_channel }}"
        installPlanApproval: Automatic
        name: advanced-cluster-management

- name: Wait for MultiClusterHub custom resource definition (CRD) to become available
  register: _oc_get_multiclusterhub
  until: _oc_get_multiclusterhub is success
  retries: 12
  delay: 10
  changed_when: false
  shell:
      cmd: oc get MultiClusterHub

- name: RHACM MultiClusterHub
  kubernetes.core.k8s:
    definition:
      apiVersion: operator.open-cluster-management.io/v1
      kind: MultiClusterHub
      metadata:
        name: multiclusterhub
        namespace: "{{ rhacm_operator_namespace }}"
      spec:
        overrides:
          components:
            - name: console
              enabled: true

            # Regrettably, if we want Ansible to go green, we
            # need to go through *every* feature in the feature set
            # (and in the right order), regardless of whether we care:
            - name: insights
              enabled: true
            - name: cluster-lifecycle
              enabled: true
            - name: volsync
              enabled: true
            - name: multicluster-engine
              enabled: true
            - name: search
              enabled: true
            - name: app-lifecycle
              enabled: true
            - name: cluster-backup
              enabled: false
            - name: grc
              enabled: true

- name: Wait for MultiClusterHub to be in `Running` phase
  register: _oc_get_mch
  until: >-
    (_oc_get_mch is success)
    and
    ("Running" in _oc_get_mch.stdout)
  retries: 20
  delay: 30
  changed_when: false
  shell:
    cmd: |
      oc -n {{ rhacm_operator_namespace }} get mch -o=jsonpath='{.items[0].status.phase}'
