# Kubernetes objects to run SATOSA in a cluster

apiVersion: v1
kind: Namespace
metadata:
  name: {{ satosa_namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: satosa
  namespace: {{ satosa_namespace }}
data:
  proxy_conf.yaml: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="proxy_conf.yaml") | indent(4) }}
  custom-entrypoint.sh: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="custom-entrypoint.sh") | indent(4) }}
  openid_connect_frontend.yaml: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="config/openid_connect_frontend.yaml") | indent(4) }}
  saml2_backend.yaml: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="config/saml2_backend.yaml") | indent(4) }}
  internal_attributes.yaml: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="config/internal_attributes.yaml") | indent(4) }}
  static_attributes_microservice.yaml: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="config/static_attributes_microservice.yaml") | indent(4) }}
  tequila_require_microservice.yaml: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="config/tequila_require_microservice.yaml") | indent(4) }}
  micro_services.py: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="site-python/epfl/micro_services.py") | indent(4) }}
  satosa_wsgi.py: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="site-python/epfl/satosa_wsgi.py") | indent(4) }}
  tequila_attributes.py: |
    {{ lookup("zip", url=satosa_tequila_zip_url, path="config/attributemaps/tequila_attributes.py") | indent(4) }}
  clients.json: |
    {{ satosa_oidc_clients |
       dictify('client_id') |
       to_json | indent(4) }}

---
apiVersion: v1
kind: Deployment
metadata:
  name: satosa
  namespace: {{ satosa_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: satosa
  template:
    metadata:
      labels:
        service: satosa
    spec:
      containers:
        - name: satosa
          image: {{ satosa_image }}
          command:
            - bash
            - -x
            - /config/custom-entrypoint.sh
          ## Comment the above two lines and uncomment below
          ## to force the container to start up (for debugging
          ## purposes):
          # - sleep
          # - "36000"
          ## ðŸ’¡ From a `kubectl exec` prompt, you can then run
          ##
          ##    /usr/local/bin/docker-entrypoint.sh gunicorn -b0.0.0.0:8080 satosa.wsgi:app
          ##
          ## to get the same behavior that the pod would normally run.
          volumeMounts:
            - name: config
              mountPath: /config
            - name: config
              subPath: custom-entrypoint.sh
              mountPath: /custom-entrypoint.sh
            - name: config
              subPath: proxy_conf.yaml
              mountPath: /proxy_conf.yaml
            - name: config
              mountPath: /site-python/epfl
            - name: config
              subPath: tequila_attributes.py
              mountPath: /attributemaps/tequila_attributes.py
            - name: config
              subPath: clients.json
              mountPath: /data/clients.json
          env:
            - name: PYTHONPATH
              value: /site-python
            - name: SATOSA_BASE_URL
              value: "{{ satosa_base_url }}"
            - name: SATOSA_ENTITY_ID
              value: "{{ satosa_entity_id }}"
      ports:
        - containerPort: 8080
          name: http
      volumes:
        - name: config
          configMap:
            name: satosa

---
apiVersion: v1
kind: Service
metadata:
  name: satosa
  namespace: {{ satosa_namespace }}
spec:
  selector:
    service: satosa
  ports:
    - name: http
      port: 80
      targetPort: 8080
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: si-quay-satosa-wellknown
  namespace: {{ satosa_namespace }}
spec:
  host: {{ quay_hostname }}
  port:
    targetPort: http
  path: /.well-known
  to:
    kind: Service
    name: satosa
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: si-quay-satosa-oidc
  namespace: {{ satosa_namespace }}
spec:
  host: {{ quay_hostname }}
  port:
    targetPort: http
  path: /OIDC
  to:
    kind: Service
    name: satosa
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: si-quay-satosa-tequila
  namespace: {{ satosa_namespace }}
spec:
  host: {{ quay_hostname }}
  port:
    targetPort: http
  path: /tequila
  to:
    kind: Service
    name: satosa
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
