# Kubernetes objects whose existence and contents don't depend on
# whether we will be creating spoke clusters, or reconnecting to them

- name: ManagedCluster object (non-namespaced; creates namespace)
  kubernetes.core.k8s:
    definition:
      apiVersion: cluster.open-cluster-management.io/v1
      kind: ManagedCluster
      metadata:
        name: "{{ spoke_namespace_in_hub }}"
        labels:
          cloud: auto-detect
          vendor: auto-detect
      spec:
        hubAcceptsClient: true

- name: Wait for spoke namespace to be created
  retries: 6
  delay: 10
  register: _oc_get_spoke_namespace
  until: >-
    "namespace/%s" % spoke_namespace_in_hub == _oc_get_spoke_namespace.stdout
  changed_when: false
  shell:
    cmd: |
      oc get ns {{ spoke_namespace_in_hub }} -o name

- name: Pull secret for spoke (same as hub)
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: spoke-pull-secret
        namespace: "{{ spoke_namespace_in_hub }}"
      stringData:
        .dockerconfigjson: "{{ xaasible_pull_secret }}"

# The following two objects are marked as required in `oc explain
# ClusterDeployment.spec.platform.vsphere`, but the details there are
# hazy or wrong. To find what these should look like, we had to take a
# look at what the clicky thing in the dashboard creates.
- name: vCenter CA certificate (Secret)
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      metadata:
        name: vcenter-cert-bundle
        namespace: "{{ spoke_namespace_in_hub }}"
      kind: Secret
      type: Opaque
      stringData:
        ca.crt: >-
          {{ lookup("vsphere_ca_bundle",
          "https://" + vsphere_credentials.host + "/certs/download.zip"
          ) }}

- name: vCenter credentials
  kubernetes.core.k8s:
    definition:
      kind: Secret
      metadata:
          name: spoke-vsphere-credentials
          namespace: "{{ spoke_namespace_in_hub }}"
      type: Opaque
      stringData:
        username: "{{ vsphere_credentials.user }}"
        password: "{{ vsphere_credentials.password }}"

- name: '`KlusterletAddonConfig` (declares feature set for the hub-spoke registration)'
  kubernetes.core.k8s:
    definition:
      apiVersion: agent.open-cluster-management.io/v1
      kind: KlusterletAddonConfig
      metadata:
        name: "{{ spoke_namespace_in_hub }}"
        namespace: "{{ spoke_namespace_in_hub }}"
      spec:
        applicationManager:
          enabled: true
        certPolicyController:
          enabled: true
        iamPolicyController:
          enabled: true
        policyController:
          enabled: true
        searchCollector:
          enabled: true
