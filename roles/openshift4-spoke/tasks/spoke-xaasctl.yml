- shell:
    creates: "{{ xaasible_cache_dir }}/xaasctl-inventory.sh"
    cmd: |
      mkdir -p {{ xaasible_cache_dir }} || true
      touch {{ xaasible_cache_dir }}/xaasctl-inventory.sh

- name: Update xaasible-state-cache/xaasctl-inventory.sh with findings from this role
  blockinfile:
    path:  "{{ xaasible_cache_dir }}/xaasctl-inventory.sh"
    marker: "# {mark} {{ inventory_hostname }} declarations from spoke-xaasctl.yml"
    block: |
      {%   set _cluster_name_shell = inventory_hostname | regex_replace('[-.]', '_') %}

      cluster_{{ _cluster_name_shell }}_fqdn={{ inventory_hostname }}

      cluster_{{ _cluster_name_shell }}_access () {
        echo "spoke"
      }

      cluster_{{ _cluster_name_shell }}_cluster_hub_name () {
        echo {{ inventory_hub_cluster | regex_replace('[-.]', '_') }}
      }

      cluster_{{ _cluster_name_shell }}_cluster_hub_namespace () {
        echo {{ spoke_namespace_in_hub }}
      }

      cluster_{{ _cluster_name_shell }}_ca_bundle () {
        echo "{{ cluster_local_ca_bundle_file }}"
      }

- name: Obtain ingress certificates
  changed_when: false
  shell: |
    set -e -x
    spew="$(openssl s_client -verify_quiet -showcerts \
            -connect {{ _oauth_fqdn }}:443 < /dev/null)"
    echo "$spew" | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
  register: _ingress_certificates
  vars:
    _oauth_fqdn: "oauth-openshift.apps.{{ inventory_hostname }}"

- name: Obtain spoke loadbalancer CA certificate
  changed_when: false
  shell:
    cmd: |
      set -e -x

      # Best if we can get that info from the horse's mouth (meaning
      # that we were already successfully logged into the cluster
      # somehow; e.g. because we are reconnecting):
      if env KUBECONFIG="{{ xaasible_kubeconfig }}" \
        oc -n openshift-kube-apiserver-operator get secret/loadbalancer-serving-signer \
        {% raw %} -o template='{{ index .data "tls.crt" }}' {% endraw %} ; then
        exit 0
      fi

      # Second best is to get it from the hub cluster:
      secret_name="$({{ _oc_in_hub }} get secret -o name \
                     | grep 'secret/.*-admin-kubeconfig')"
      {{ _oc_in_hub }} extract "$secret_name" --to=- \
                     | sed -n 's/^ *certificate-authority-data: \(.*\)/\1/p'
  register: _spoke_lb_signer
  vars:
    _oc_in_hub: >-
      oc -n "{{ spoke_namespace_in_hub }}"

- name: 'Spoke CA bundles under `{{ cluster_local_ca_bundle_file | dirname }}/`'
  copy:
    dest: "{{ cluster_local_ca_bundle_file }}"
    content: |
      {{ _spoke_lb_signer.stdout | b64decode }}

      {{ _ingress_certificates.stdout }}
