- tags: always
  include_vars: "{{ item }}"
  with_items:
    - resources.yml
    # The `ocp-install-config.yaml` template in the next task below
    # wants these, so as to set up ssh access to managed nodes (and
    # also, https://github.com/ansible/ansible/issues/57751 forces us
    # to do things this way):
    - versions.yml
    - ssh-public-keys.yml
    - access.yml

- name: "`openshift-install-config` Secret"
  kubernetes.core.k8s:
    definition:
      kind: Secret
      metadata:
        name: openshift-install-config
        namespace: "{{ spoke_namespace_in_hub }}"
      stringData:
        "install-config.yaml": >-
          {{ lookup("template", "ocp-install-config.yaml") }}
  vars:
    # The template explicitly expects the following variables:
    ocp_config_pull_secret: "{{ xaasible_pull_secret }}"
    ocp_config_resources: >-
      {{ resources_openshift_clusters[inventory_hostname] }}

- name: '`ClusterDeployment`'
  register: _spoke_clusterdeployment
  kubernetes.core.k8s:
    definition: >-
      {{ lookup("template", "clusterdeployment.yml")
      | from_yaml }}
  vars:
    _clusterdeployment_specific_spec:
      provisioning:
        imageSetRef:
          name: "{{ spoke_clusterimageset_name }}"
        installConfigSecretRef:
          name: openshift-install-config
      pullSecretRef:
        name: spoke-pull-secret

- run_once: true
  when: _spoke_clusterdeployment is changed
  pause:
    echo: false
    seconds: 1
    prompt: |
      ==========================================================================

      OpenShift installation is in progress in spoke clusters; this might take some time.

      If you are bored, feel free to watch progress at

          https://console-openshift-console.apps.{{ inventory_hub_cluster }}/multicloud/infrastructure/clusters/managed

      and click on the “Creating” hyperlinks to watch logs.

      ==========================================================================


- name: >-
    {{ "Wait for the spoke cluster(s) to come up"
    if _spoke_clusterdeployment is changed
    else "Check that the spoke cluster(s) are up"
    }}
  retries: >-
    {{ 50
    if _spoke_clusterdeployment is changed else 1 }}
  delay: 60
  register: _oc_get_clusterdeployment_installed
  until: >-
    "true" == _oc_get_clusterdeployment_installed.stdout
  changed_when: false
  shell:
    cmd: |
      oc -n {{ spoke_namespace_in_hub }} get clusterdeployment  {{ spoke_namespace_in_hub }} \
        -o jsonpath="{.spec.installed}"
