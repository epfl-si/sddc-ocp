- name: Delete (almost) everything in the {{ nginx_ingress_namespace }} namespace
  tags: nginx.wipe
  when: |
    "nginx.wipe" in ansible_run_tags
  ignore_errors: true
  shell:
    cmd: |
      set -e -x
      for wat in all secret; do
        {{ xaasible_kubectl }} get $wat -n {{ nginx_ingress_namespace }} -o name
      done | \
        grep -v default-token | grep -v pod/ |grep -v replicaset/ | \
        xargs {{ xaasible_kubectl }} -n {{ nginx_ingress_namespace }} delete --ignore-not-found

      {{ xaasible_kubectl }} delete --ignore-not-found ingressclass nginx

- name: Import ingress-nginx Helm repository
  kubernetes.core.helm_repository:
    name: ingress-nginx
    repo_url: "https://kubernetes.github.io/ingress-nginx"

# See https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
- name: Deploy nginx with Helm
  kubernetes.core.helm:
    name: "{{ nginx_ingress_helm_install_name }}"
    chart_ref: "{{ nginx_helm_chart }}"
    release_namespace: "{{ nginx_ingress_namespace }}"
    create_namespace: yes
    values:
      controller:
        image:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
        service:
          loadBalancerIP: "{{ nginx_loadbalancer_ip }}"
        # We (manually) kicked out the whole Contour, so we want to handle all Ingress objects:
        watchIngressWithoutClass: true
        # Because of DSI-TKGI restrictions, we have to turn these off:
        admissionWebhooks:
          enabled: false
          patch:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
      defaultBackend:
        image:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
