- name: "bastion-vm: configure bastion VM(s)"
  hosts: bastions
  gather_facts: no
  roles:
    - role: roles/bastion-vm
      vars:
        ansible_user: root
        ansible_connection: ssh
        ansible_host_key_checking: false
        # ansible_ssh_host is set in roles/bastion-vm/tasks/bastion-get-IP.yml

- name: "openshift4-bootstrap: bootstrap cluster(s) from bastions"
  hosts: openshift_hub_clusters
  gather_facts: no
  roles:
    - role: roles/openshift4-bootstrap
      vars:
        # During bootstrap, “steal” the Ansible / vSphere connection
        # parameters from the underlying bastion VM:
        ansible_host:                  "{{ hostvars[inventory_bastion].ansible_host }}"
        ansible_user: root        # As in roles/bastion-vm, above
        ansible_connection: ssh   # Ditto
        vsphere_credentials: "{{ hostvars[inventory_bastion].inventory_vsphere_credentials }}"

- name: "openshift4-hub: for clusters that can create clusters"
  hosts: openshift_hub_clusters
  gather_facts: no
  roles:
    - role: roles/openshift4-hub
      vars:
        # Now that boostrap is over, we no longer want to go through
        # the bastion to talk to clusters:
        ansible_connection: local
        ansible_python_interpreter: "{{ xaasible_python_shim }}"
